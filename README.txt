# emo
人脉管理工具


################################使用说明：################################
注册只需要填写用户名，密码，邮箱就可以了，不需要验证邮箱
注册完成后就可以登陆了

登陆后可以添加朋友了，可以为朋友设置 标签 和 属性。
这也是emo最核心最精髓的功能，因为这一步操作有很大的灵活性。

标签：
标签就是一段简单的文字，你可以添加多个，然后你可以使用“根据标签搜索”功能搜索含有某个标签的好友，搜索出来这些好友后，你可以给他们发邮件（对于设置了“邮箱”属性的好友，我们可以自动发邮件，对没有设置“邮箱”属性的好友，我们将自动忽略）
如果你想让标签和关键字完全匹配，你可以取消勾选“模糊搜索”
如果你想让标签和关键字部分匹配，你可以勾选“模糊搜索”
属性：
属性由属性名和属性内容两部分组成，属性分三种：文字属性，日期属性，数值属性。
设置属性后，可以使用“根据属性筛选”功能，选择你要用来筛选的属性（目前仅支持使用一个属性筛选，后期有时间会考虑扩展）
对于文字属性，我们可以根据关键字搜索
对于数值属性，我们可以根据数值范围筛选
对于日期属性，我们可以根据日期范围筛选
然后同样你也可以给筛选出来的好友发送邮件。

群发邮件时，你可以使用【朋友姓名】来标注出你想要嵌入朋友姓名的地方，然后emo会自动为你嵌入该朋友的姓名，这样就可以避免给所有人群发邮件时千篇一律

比如：
你可以设置一个名叫“自己”的朋友，然后给他设置上邮箱，然后你就可以定时给自己发送邮件提醒了
你可以将你公司的同事都加进去，并给他们打上合适的标签（老板、下属），然后你可以筛选出你的老板然后给他们发拜年邮件（好吧，可能还是短信更实际些）



################################开发说明：################################

一、部署
在settings.py中配置以下字段
ELASTIC_HOST
ELASTIC_HOST
DATABASES
在app_user.py中配置redis位置
broker='redis://127.0.0.1:6379/0',backend='redis://127.0.0.1:6379/0'

然后先启动redis，再启动celery，再启动elastic search，最后启动django
接下来会写个脚本自动部署


二、安全
1、elastic search
目前测试版，尚未给elastic search做安全配置，注意正式上线不要这样。最好给elastic search做安全加固或者干脆将elastic search放到django所在服务器上。

2、csrf
考虑到用到了很多ajax请求，接下来还可能要对接APP，所以关闭了django自带的csrf机制
# 'django.middleware.csrf.CsrfViewMiddleware',
#禁用csrf，以方便和移动端android前端vue.js对接
后期最好能自己实现一个csrf验证机制（在表单中放token）

3、逻辑漏洞
因为只用了cookie做保持登陆，然后从cookie中读取了username作为elastic search的index
所以用户可能会爆破我的salt，然后伪造一个cookie来实现查询其他用户信息的操作，接下来考虑试一下看看是不是真的可以

三、改进
1、APP接入
我们最开始想的是搜索/筛选出好友后，可以使用用户手机给该好友发送短信，现在都没有多少人使用邮件了。

2、根据多个属性筛选
目前只能根据一个属性筛选，考虑加入根据多个属性筛选的功能